(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     24887,        577]
NotebookOptionsPosition[     23862,        538]
NotebookOutlinePosition[     24197,        553]
CellTagsIndexPosition[     24154,        550]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p", " ", "=", " ", 
     RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", " ", "=", " ", 
     RowBox[{"Power", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}]}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"(", 
           RowBox[{"2", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}]}], ")"}]}], ")"}]}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"p", "-", "1"}], ")"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.709384156304689*^9, 3.709384212182699*^9}, {
  3.709384257971249*^9, 3.709384258103468*^9}, {3.709384741249433*^9, 
  3.709384741881342*^9}, {3.709384773362536*^9, 3.7093847938603983`*^9}, {
  3.709385091602622*^9, 3.7093850931890783`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rad", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}], "+", 
     RowBox[{"z", "^", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7093842755066547`*^9, 3.7093842963432503`*^9}, {
   3.709384332999229*^9, 3.709384333145351*^9}, 3.709385094232429*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rad2", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", 
    RowBox[{"y", "^", "2"}], "+", 
    RowBox[{"z", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}], "+", 
     RowBox[{"z", "^", "2"}]}], ">", "0"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.709384710345416*^9, 3.709384714640861*^9}, {
  3.709384947096509*^9, 3.709384971183874*^9}, {3.7093850949644413`*^9, 
  3.709385095405108*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"M", "*", 
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"rad2", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}]}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709384267847844*^9, 3.709384274099547*^9}, {
   3.7093843084361753`*^9, 3.709384339290104*^9}, {3.7093847179840193`*^9, 
   3.709384720009179*^9}, 3.7093850963672457`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Laplacian", "[", 
    RowBox[{
     RowBox[{"w", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "-", 
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"w", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", "p"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709384350954884*^9, 3.709384392011779*^9}, {
  3.709384690218951*^9, 3.7093846912700033`*^9}, {3.709384980733471*^9, 
  3.7093850245933857`*^9}, {3.709385063714492*^9, 3.7093850667677402`*^9}, {
  3.7093850970300198`*^9, 3.709385102798634*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.709385103922267*^9, {3.709429523805152*^9, 3.709429540794756*^9}, 
   3.70942960163*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M2D", " ", "=", " ", 
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"(", 
         RowBox[{"2", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}]}], ")"}], ")"}]}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.709384156304689*^9, 3.709384212182699*^9}, {
  3.709384257971249*^9, 3.709384258103468*^9}, {3.709384741249433*^9, 
  3.709384741881342*^9}, {3.709384773362536*^9, 3.7093847938603983`*^9}, {
  3.709385091602622*^9, 3.7093850931890783`*^9}, {3.709429456859833*^9, 
  3.7094294606674747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rad22d", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.709384710345416*^9, 3.709384714640861*^9}, {
   3.709384947096509*^9, 3.709384971183874*^9}, {3.7093850949644413`*^9, 
   3.709385095405108*^9}, {3.70942946718902*^9, 3.709429497771592*^9}, 
   3.709429539571352*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"w2d", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"M2D", "*", 
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"rad22d", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}]}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709384267847844*^9, 3.709384274099547*^9}, {
   3.7093843084361753`*^9, 3.709384339290104*^9}, {3.7093847179840193`*^9, 
   3.709384720009179*^9}, 3.7093850963672457`*^9, {3.709429492207652*^9, 
   3.709429507368527*^9}, {3.709429600175741*^9, 3.709429600540292*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Laplacian", "[", 
    RowBox[{
     RowBox[{"w2d", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "-", 
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"w2d", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "p"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709384350954884*^9, 3.709384392011779*^9}, {
  3.709384690218951*^9, 3.7093846912700033`*^9}, {3.709384980733471*^9, 
  3.7093850245933857`*^9}, {3.709385063714492*^9, 3.7093850667677402`*^9}, {
  3.7093850970300198`*^9, 3.709385102798634*^9}, {3.709429511007313*^9, 
  3.709429520486117*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.709385103922267*^9, {3.709429524533279*^9, 3.709429540879525*^9}, 
   3.709429601714281*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Power", "[", 
    RowBox[{".1", ",", 
     RowBox[{"2", "*", "x"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709430315745957*^9, 3.709430364251895*^9}, {
  3.70943054818106*^9, 3.70943054852125*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
7ZHRoseR+bXqT9j/AH97vmk=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3}, {0., 0.22408531421379138`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7094303543975983`*^9, 3.709430365055183*^9}, 
   3.709430548976396*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{".1", "*", ".1"}]], "Input",
 CellChangeTimes->{{3.709430560419854*^9, 3.709430561185306*^9}}],

Cell[BoxData["0.010000000000000002`"], "Output",
 CellChangeTimes->{3.709430561572386*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Power", "[", 
    RowBox[{".5", ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7094306338843527`*^9, 3.70943063413934*^9}, {
  3.709430666404087*^9, 3.709430666493067*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVxX081HcAB/CTh58UskmhGuE3qr3Oaz2i+nzRNJqoledOd55NkvVsTB7K
yt2LaKuEtApz9iqVSsXPQ3cnUnJ5mDiE4uI8RZFu2x/v19uUt39n0BwWi+X6
n///sC0y231/1GbPiPUDSqUCJwO/tnxGb4enSUu7aFqBp8O94Xyag9KyGwWC
9wqM3HJMjaAjIWcnPjeRK5BgML7Ej45D1+bKXW7NCtSJXfp+pAUo1vp9wUuh
AvsvH651o3NwODiak+CjQGVq6gNX+m/YeDkK/e4NQ10jmhoIr0ADPXZnPGAI
zr9yk+94iKHhPxwcvvod7h4L6rjW2IDi85pxL/TlaPP5iR19pAmFc9kFtYMD
0NvKD64kLZjZ2uewrustFkiDStb7tuOMXVh5UN0bmJlEFCbzZOBeKVJ6iPux
oWNfnf3Zbtjrxm8Rd/ahcjr+B2nWazj7ZvL0hnoRWiGRlCf0wTLKKbhVvxcX
AvKNFu59A7tt7ee8nV/jG6/uyc9BA9gxnOVScKgHneNuDcRZDiOfxJGd97ox
JjO0Ntg9hPXGcVXXx7uQVnQ8xNNTgUEzN1pm2wVaV9P1aNYIyuu+FHy/UobS
qPgiQe4oTj8A73ZTB6QWGdSOs2OQ/HyT2Xv5FcwTmyz3XBjHKZcjCe7cdti4
y9bkZk0g7IrW3My1/6AjKnkzP/U9WpHilmzVhhIbb+3H6ZP4ZKhhPP1FKww8
xG0FyVO47jtiX2fYAvSw0qsOfkD9V4XxzuxmXDAI1aaPfsSqRVoynt1LJOSE
nVobPo1w+/FjG7lSZDecFwmiZuD2V1dqcVwTYiMzRpZGf4LRAm1aWvgCcq7l
Ym/eLPpV5ofEyhtxZnZQrTP4M9bVCPX+tGhE2butCh0fJd5mX5m6fvA5mi02
9Nias8jixcpMq0vPEGoVwM64xiIB/Bp1gX0DKj18Y+yXqRDeEzo/bd5TrPYa
LNTPUyEOJ7g+SbV1iEh0atlkPIfY+TcvCil8gpRgzWmVjDlE5liSsuViLR4t
5SoH9VVJq2HL0K54Ce5/Pqm6QqBKkpck5NJJYjTcchzk66mRuogck+1xIjw2
CRalnlUj2RtVDrmnPEbS3d153VrqpGsoU3OXsAZ+y19xfPnqhLqa8uq2uBoz
pWzjlZQGKVKb3GM9U4VfVAfqz8VpEN0Dxv6ltlUwMLfhWrAo4ieNLPs1uhJH
Ij0mtI5RZG59i3RfBYMl6wIldAxFVJK8RZyHDJjZA5ccYili8UDm5H6fgRaf
v+X4CYqoW6dPrLnFIKeoJnPgN4osVBYr1fIZiN5+u1ZykSJ/mGuXVwgY6Afo
Hk5+SJHGMmc6l8Pg/oqlLnnlFHkUaizK82XAGVux7BFDEdP+0tGrXgwKTjiJ
Jmoo4rKmTy7cycDucqxB4FOK1AftDqt2YsDrkJc6dFLE+NJ30VpsBtS1j6c5
XRSpviuqWriKgTCC8j/eQ5EnO2KyTa0YTM4sp0r6KXJDx2jU1ozBaSMfT1MF
RQx0InQOLmLA7glZuWmUIhkccXGiPgNp4SGl1zhFLjKpzRl6DJbZpOenTVGE
9hmtvjOPQTUrN0b4kSLp+zgpYk0GoRKhm2SGIq4ujS/b1BnMTysz652lCDNg
LXw3h8FNT8mUUkmRDufAeSwWg38BEUFKvA==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.12500000530469793`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3}, {0.12500000530469793`, 0.9999999575624184}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.70943063514993*^9, 3.709430666919284*^9}]
}, Open  ]]
},
WindowSize->{1916, 245},
WindowMargins->{{2, Automatic}, {Automatic, 283}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 988, 27, 71, "Input"],
Cell[1549, 49, 424, 11, 33, "Input"],
Cell[1976, 62, 631, 18, 54, "Input"],
Cell[2610, 82, 570, 15, 33, "Input"],
Cell[CellGroupData[{
Cell[3205, 101, 677, 17, 35, "Input"],
Cell[3885, 120, 141, 3, 30, "Output"]
}, Open  ]],
Cell[4041, 126, 892, 23, 70, "Input"],
Cell[4936, 151, 484, 12, 52, "Input"],
Cell[5423, 165, 651, 16, 33, "Input"],
Cell[CellGroupData[{
Cell[6099, 185, 697, 17, 35, "Input"],
Cell[6799, 204, 145, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6981, 212, 342, 9, 32, "Input"],
Cell[7326, 223, 12707, 222, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20070, 450, 117, 2, 30, "Input"],
Cell[20190, 454, 90, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20317, 460, 319, 8, 32, "Input"],
Cell[20639, 470, 3207, 65, 233, "Output"]
}, Open  ]]
}
]
*)

